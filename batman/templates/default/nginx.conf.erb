user www-data;
worker_processes  <%= node[:ngnix][:worker_processes] %>;
pid        /run/nginx.pid;

events {
  worker_connections  <%= node[:ngnix][:worker_connections] %>;
  multi_accept        on;
  use                 epoll;
}

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;
  
  # Disable sending the server identification
  server_tokens off;
    
  # Prevent browsers from detecting the mimetype if not sent by the server.
  add_header X-Content-Type-Options nosniff;
  
  # Force enable the XSS filter for the website, in case it was disabled manually
  add_header X-XSS-Protection "1; mode=block";
  
  # Configure the cache for static assets
  proxy_cache_path /srv/nginx_cache levels=1:2 keys_zone=my_cache:10m max_size=10g inactive=60m use_temp_path=off;
  
  # Set the max file size for uploads (make sure it is larger than the configured media size in botpress.config.json)
  client_max_body_size 10M;              

  access_log	/var/log/nginx/access.log;
  access_log off;
  error_log  /var/log/nginx/error.log;
  
  # Redirect requests to the server
  server {
    listen 80 default;
    server_name  localhost;
    if ($http_x_forwarded_proto = 'http'){
      return 301 https://$host$request_uri;
    }
    
    # We need to add specific headers so the websockets can be set up through the reverse proxy
    location /socket.io/ {
      proxy_pass http://localhost:3000/socket.io/;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "Upgrade";
    }

    # All other requests should be directed to the server
    location / {
      proxy_pass <%= node[:ngnix][:proxy_pass] %>;
    }
  }

  # include /etc/nginx/conf.d/*.conf;
  # include /etc/nginx/sites-enabled/*;
}